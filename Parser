#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>


using namespace std;

bool HEX(string str)
{
    cout << str.size() << endl;
    if (str.size() != 6)
    {
        return false;
    }
    else
    for (int i = 0; i < str.size(); i++)
    {
        if ((str[i] > 'f') ||
            (str[i] < '0') ||
            ((str[i] > '9') && (str[i] < 'A')) ||
            ((str[i] > 'F') && (str[i] < 'a'))) return false;
    }
    return true;
}

struct Command {
    string name;
    int r, g, b;
    int first;
    int second;
    int third;
    int fourth;
   int success;
};

void Parse(char *buff, struct Command *com)
{
    int k;
    char* arr[100];
    char* str;
    char* next_token1 = NULL;
    str = strtok_s(buff, " ,.-;:", &next_token1); //Здесь знаки, отделяющие слова
    k = 0;
    while (str != NULL)
    {
        arr[k] = str;
        k++;
        str = strtok_s(NULL, " ,.-", &next_token1);
    }
  
    int num;
    char* end;
    int error=0;
   
 
    switch (k)
    {
    case 2:
            com->name = arr[0];
            
          
            if (!HEX(arr[1]))
            {
                cout << "ERROR: Неправильный параметр color" << endl;
                error = 1;
            }
            if (error == 1)break;
            

            num = strtol(arr[1], &end, 16);
          
            com->r = num / 0x10000;
            com->g = (num / 0x100) % 0x100;
            com->b = num % 0x100;

            com->success = 1;
            cout << "Принято" << endl;
            break;
        
    case 4:
        com->name = arr[0];
        
        com->first = strtol(arr[1], &end, 10);
        if (end == arr[1])
        {
            cout << "ERROR: Параметр (1) - некорректное значение" << endl;
            error = 1;
        }
        if (error == 1)break;

        com->second = strtol(arr[2], &end, 10);
        if (end == arr[2])
        {
            cout << "ERROR: Параметр (2) - некорректное значение" << endl;
            error = 1;
        }
        if (error == 1)break;


            //color
        if (!HEX(arr[3]))
        {
            cout << "ERROR: Неправильный параметр color" << endl;
            error = 1;
        }
        if (error == 1)break;


        num = strtol(arr[3], &end, 16);

        com->r = num / 0x10000;
        com->g = (num / 0x100) % 0x100;
        com->b = num % 0x100;

        com->success = 1;
            cout << "Принято" << endl;

            break;

    case 6:
        
        com->name = arr[0];
        com->first = strtol(arr[1], &end, 10);
        if (end == arr[1])
        {
            cout << "ERROR: Параметр (1) - некорректное значение" << endl;
            error = 1;
        }
        if (error == 1)break;

        com->second = strtol(arr[2], &end, 10);
        if (end == arr[2])
        {
            cout << "ERROR: Параметр (2) - некорректное значение" << endl;
            error = 1;
        }
        if (error == 1)break;

        com->third = strtol(arr[3], &end, 10);
        if (end == arr[3])
        {
            cout << "ERROR: Параметр (3) - некорректное значение" << endl;
            error = 1;
        }
        if (error == 1)break;

        com->fourth = strtol(arr[4], &end, 10);
        if (end == arr[4])
        {
            cout << "ERROR: Параметр (4) - некорректное значение" << endl;
            error = 1;
        }
        if (error == 1)break;

            //color
        if (!HEX(arr[5]))
        {
            cout << "ERROR: Неправильный параметр color" << endl;
            error = 1;
        }
        if (error == 1)break;


        num = strtol(arr[5], &end, 16);
        com->r = num / 0x10000;
        com->g = (num / 0x100) % 0x100;
        com->b = num % 0x100;

        com->success = 1;
            cout << "Принято" << endl;
            break;

    default:
        com->success = 0;
        cout << "Error: Неправильноe количество параметров" << endl;
        break;
    }
}

void printInformation( struct Command *com)
{
   
        if (com->name == "clear_display")
        {
            cout << com->name << ":" << "(" << com->r << ", " << com->g << ", " << com->b << ")" << endl;
            cout << "Принято" << endl;
        }

        else if (com->name == "draw_pixel")
        {
            cout << com->name << ":" <<" "<< com->first<<" "<< com->second<<" "<< "(" << com->r << ", " << com->g << ", " << com->b << ")"<< endl;
            cout << "Принято" << endl;
        } 
        else if (com->name == "draw_line")
        {
            cout << com->name << ":" <<" "<< com->first << " " << com->second << " "<< com->third <<" " << com->fourth<< " "<<"(" << com->r << ", " << com->g << ", " << com->b << ")" << endl;
            cout << "Принято" << endl;
        }
        else if (com->name == "draw_rectangle")
        {
            cout << com->name << ":" << " " << com->first << " " << com->second << " " << com->third << " " << com->fourth << " " << "(" << com->r << ", " << com->g << ", " << com->b << ")" << endl;
            cout << "Принято" << endl;
        }
        else if (com->name == "fill_rectangle")
        {
            cout << com->name << ":" << " " << com->first << " " << com->second << " " << com->third << " " << com->fourth << " " << "(" << com->r << ", " << com->g << ", " << com->b << ")" << endl;
            cout << "Принято" << endl;
        }
        else if (com->name == "draw_ellipse")
        {
            cout << com->name << ":" << " " << com->first << " " << com->second << " " << com->third << " " << com->fourth << " " << "(" << com->r << ", " << com->g << ", " << com->b << ")" << endl;
            cout << "Принято" << endl;
        }
        
        else if (com->name == "fill_ellipse")
        {
            cout << com->name << ":" << " " << com->first << " " << com->second << " " << com->third << " " << com->fourth << " " << "(" << com->r << ", " << com->g << ", " << com->b << ")" << endl;
            cout << "Принято" << endl;
        }

        else
        {
            com->success = 0;
            cout << "Error: Неправильная команда " << endl;
        }
    
}

int main()
{
    setlocale(LC_ALL, "rus");
    char a[100];
    cout << "Введите строку из слов:" << endl;
    gets_s(a);
    struct Command one;

    Parse(a, &one);
  
    if (one.success == 1)
    {
        printInformation(&one);
    }

    cin.get();
    return 0;
}

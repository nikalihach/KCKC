Спецификация :

Алгоритм работы программы Сервер-клиент (используемый язык С++):

Программа клиент посылает пакет, содержащий команду и необходимые параметры (в строковом виде), на сервер, соединение с которым происходит по протоколу UDP. Сервер принимает пакет и проводит синтаксический разбор присланных данных через функцию Parse. Во время разбора пакета с происходит проверка на совпадение команды, принятой от клиента, с командами, которые поддерживаются сервером. В случае совпадения, команда проверяется на корректность введенных параметров. Если оба пункта: правильность команды и корректные параметры, выполняются, то программа сервера выводит в консоль имя принятой команды и ее параметры. В обратном случае, в консоль выводится сообщение об ошибке.

Команды: 

Команда должна содержать название команды и необходимые параметры, разделенные пробелом. Наличие более одного пробела между параметрами не считается ошибкой. Разделитель «:» не является обязательным.

Размер окна: 600 на 600

Данные для отправки на сервер: строковый массив;

Очистить дисплей (Заливка дисплея в заданный цвет): 

clear_display: color

Пример команды: clear_display: 000000


Нарисовать пиксель (Пиксель по заданным координатам окрашивается в выбранный цвет): 

draw_pixel: x0 y0 color

Пример команды: draw_pixel: 10 20 000000 


Нарисовать линию (Рисуется линия по двум точкам, заданным координатами, определенного цвета): 

draw_line: x0 y0 x1 y1 color

Пример команды: draw_line: 10 20 15 25 000000


Нарисовать прямоугольник (Рисуется прямоугольник из заданной координатами точки, с указанной высотой и шириной, выбранного цвета): 

draw_rectangle: x0 y0 w h color

Пример команды: draw_rectangle: 10 20 15 25 000000


Нарисовать прямоугольник с заливкой цветом (Рисуется прямоугольник из заданной координатами точки, с указанной высотой и шириной, с заливкой содержимого прямоугольника выбранным цветом): 

fill_rectangle: x0 y0 w h color

Пример команды: fill_rectangle: 10 20 15 25 000000


Нарисовать эллипс (Рисуется эллипс по указанной координатами точке и выбранным радиусом, определенного цвета):

draw_ellipse: x0 y0 radius_x radius_y color

Пример команды: draw_ellipse: 20 15 10 5 000000


Нарисовать эллипс с заливкой цветом (Рисуется эллипс по указанной координатами точке и выбранным радиусом, с заливкой содержимого эллипса выбранным цветом): 

fill_ellipse: x0 y0 radius_x radius_y color

Пример команды: fill_ellipse: 20 15 10 5 000000


Параметры:

x0, x1 – координаты на оси абсцисс; 

y0, y1 – координаты на оси ординат; 

w – ширина; 

h –  высота; 

radius_x, radius_y – радиусы; 

color – цвет; формат RGB888; (параметр в строковом виде шестнадцатеричного числа длиной 6 символов);

Все параметры имеют целочисленный тип данных.

Диапазон возможных допустимых значений: [-32768; +32767]
(Исключая параметр color);
Значения высоты, ширины и радиусов не должно быть равно 0;

Рекомендуется использовать значения в диапазоне, не превышающем размеры окна, чтобы отрисованная фигура была в зоне видимости (в пределах окна).


Дополнение:

Отрисовка текста с использованием команд рисования линий:
draw_text: x0 y0 color  font_number size text

где :
x0,  y0 – координаты точки начала текста;
color  - цвет текста;
font_number – номер шрифта; Целочисленный тип данных; Диапазон возможных допустимых значений: [0; 65535](Зависит от количества доступных шрифтов);
size – размер шрифта; Целочисленный тип данных; Диапазон возможных допустимых значений: [0; 255];
text – текст. 

Пример команды: draw_text: 100 120 52ae41 1 20 Добро пожаловать


Установить ориентацию (задать угол поворота):
set orientation: orientation //(0=0, 1=90, 2=180, 3=270)
где:
orientation - величина поворота. Может принимать значение от 0 до 3, что соответствует углам 0, 90, 180 и 270 градусов соответственно. 

Пример команды: set_orientation: 1

Запросить размер окна:	
get_width: 
get_height:

Пример команды: get_ width:


Загрузить изображение (спрайт):
load_sprite: index width height data

где:
index – индекс изображения; Целочисленный тип данных; Диапазон возможных допустимых значений: [0; 255];
width, height – ширина и высота изображения;
data – данные загружаемого изображения(имя файла), символьный тип данных;

Пример команды: load_sprite: 0 100 100 snail.png

Показать изображение:
show_sprite: index  x  y

где:
x,  y – координаты точки начала изображения (местонахождение верхнего левого угла); 
Целочисленный тип данных; Диапазон возможных допустимых значений: [0; 65535];

Пример команды: show_sprite: 0 0 0


